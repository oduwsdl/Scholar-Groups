# This is a basic workflow to help you get started with Actions

name: Google Scholar Toolkit

# Controls when the workflow will run
on: [push, pull_request]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
            
      - name: htmlsave
        run: |
           sudo find output/data -type f -iname \*.html -delete
           python3 ./code/htmlsave.py --output output/data oWQaPnwAAAAJ MOLPTqcAAAAJ OkEoChMAAAAJ -eRsYx8AAAAJ QjHw7ugAAAAJ Of8dNP0AAAAJ jDmcdsUAAAAJ
           echo "num_of_html=$(ls output/*.html | wc -l)" >> $GITHUB_ENV
           echo "empty_html=$(find . -name '*.html' -size 0 | wc -l)" >> $GITHUB_ENV
           echo "corrupted_html=$( grep -irm 1 '<p class=\"a2CQh\" jsname=\"VdSJob\">to continue to Google Scholar Citations</p>' --include \*.html . | wc -l)"
      - name: Check if HTML files are generated on htmlsave
        if: ${{ env.num_of_html < 1 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('No files generated on htmlsave')
      - name: Check for empty HTML files generated on htmlsave
        if: ${{ env.empty_html < 1 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Empty HTML files')
      - name: Check for corrupted HTML files generated on htmlsave
        if: ${{ env.corrupted_html < 1 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Corrupted HTML files')
        
      - name: html2ukvs
        run: |
          sudo apt-get install python3-bs4
          sudo apt-get install w3m
          sudo find output/data -type f -iname \*.ukvs -delete
          python3 ./code/html2ukvs.py output/data/*.html -i oWQaPnwAAAAJ --start=2002 -i MOLPTqcAAAAJ --start=2011 -i -eRsYx8AAAAJ --start=2018 -i OkEoChMAAAAJ --start=2018 -i Of8dNP0AAAAJ --start=2019 -i QjHw7ugAAAAJ --start=2020 -i jDmcdsUAAAAJ --start=2002 --end=2005
          echo "num_of_ukvs=$(ls output/*.ukvs | wc -l)" >> $GITHUB_ENV
          echo "empty_ukvs=$(find . -name '*.ukvs' -size 0 | wc -l)" >> $GITHUB_ENV
      - name: Check if HTML files are generated on html2ukvs
        if: ${{ env.num_of_ukvs < 1 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('No files generated on html2ukvs')
      - name: Check for empty UKVS files generated on html2ukvs
        if: ${{ env.empty_ukvs < 1 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Empty UKVS files')
      - name: Sort
        run: |
          cat output/data/*ukvs | sort -u -k1,1 | sort -k2 -rn > output/comprehensive.ukvs
          wc output/*.ukvs
      - name: ukvsconvert
        run: |
          ./code/ukvsconvert.py --json output/comprehensive.ukvs > output/Merged_Results.json
          ./code/ukvsconvert.py --bibtex output/comprehensive.ukvs > output/Merged_Results.bib
          ./code/ukvsconvert.py --md --title "WSDL Articles" --list=all output/comprehensive.ukvs > output/Merged_Results_ListAll.md
          ./code/ukvsconvert.py --md --title "WSDL Articles" --list=1 output/comprehensive.ukvs > output/Merged_Results_List1.md
          ./code/ukvsconvert.py --md --title "WSDL Articles" --list=none output/comprehensive.ukvs > output/Merged_Results_ListNone.md
          ./code/ukvsconvert.py --html --title "WSDL Articles" --list=all output/comprehensive.ukvs > output/Merged_Results_ListAll.html
          ./code/ukvsconvert.py --html --title "WSDL Articles" --list=1 output/comprehensive.ukvs > output/Merged_Results_List1.html
          ./code/ukvsconvert.py --html --title "WSDL Articles" --list=none output/comprehensive.ukvs > output/Merged_Results_ListNone.html
          w3m -dump Merged_Results_ListAll.html
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add --all
          if [-z "$(git status --porcelain)"]; then
           echo "::set-output name=push::false"
          else
           git commit -m "Add changes" -a
           echo "::set-output name=push::true"
          fi
        shell: bash
      - name: Push changes via push
        if: steps.commit.outputs.push == 'true' && github.event_name == 'push'
        # uses: ad-m/github-push-action@master
        run: |
          git push origin ${GITHUB_REF##*/}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Push changes via pull request
        if: steps.commit.outputs.push == 'true' && github.event_name == 'pull_request'
        # uses: ad-m/github-push-action@master
        run: |
          git branch
          git push origin ${{ github.event.pull_request.head.ref }}
          
